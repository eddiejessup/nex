from .instructions import Instructions
from .parameters import Parameters, Specials


# Control sequence to instruction map.
I = Instructions
primitive_control_sequences = {
    'catcode': I.cat_code,
    'mathcode': I.math_code,
    'uccode': I.upper_case_code,
    'lccode': I.lower_case_code,
    'sfcode': I.space_factor_code,
    'delcode': I.delimiter_code,
    'let': I.let,
    'advance': I.advance,
    'par': I.par,
    'relax': I.relax,
    'immediate': I.immediate,
    'font': I.font,
    'skewchar': I.skew_char,
    'hyphenchar': I.hyphen_char,
    'fontdimen': I.font_dimen,
    'textfont': I.text_font,
    'scriptfont': I.script_font,
    'scriptscriptfont': I.script_script_font,
    'undefined': I.undefined,
    'global': I.global_mod,
    'long': I.long_mod,
    'outer': I.outer_mod,
    'setbox': I.set_box,
    'box': I.box,
    'copy': I.copy,
    'unhbox': I.un_h_box,
    'unhcopy': I.un_h_copy,
    'unvbox': I.un_v_box,
    'unvcopy': I.un_v_copy,
    'lastbox': I.last_box,
    'vsplit': I.v_split,
    'ht': I.box_dimen_height,
    'wd': I.box_dimen_width,
    'dp': I.box_dimen_depth,
    'kern': I.kern,
    'mkern': I.math_kern,
    'vrule': I.v_rule,
    'hrule': I.h_rule,
    'input': I.input,
    'end': I.end,
    'char': I.char,
    'indent': I.indent,
    'message': I.message,
    'errmessage': I.error_message,
    'write': I.write,
    'hyphenation': I.hyphenation,
    'patterns': I.patterns,
    'hskip': I.h_skip,
    'hfil': I.h_fil,
    'hfill': I.h_fill,
    'hss': I.h_stretch_or_shrink,
    'hfilneg': I.h_fil_neg,
    'vskip': I.v_skip,
    'vfil': I.v_fil,
    'vfill': I.v_fill,
    'vss': I.v_stretch_or_shrink,
    'vfilneg': I.v_fil_neg,
    'hbox': I.h_box,
    'vbox': I.v_box,
    'vtop': I.v_top,
    'count': I.count,
    'dimen': I.dimen,
    'skip': I.skip,
    'muskip': I.mu_skip,
    'toks': I.toks,
    'chardef': I.char_def,
    'mathchardef': I.math_char_def,
    'countdef': I.count_def,
    'dimendef': I.dimen_def,
    'skipdef': I.skip_def,
    'muskipdef': I.mu_skip_def,
    'toksdef': I.toks_def,
    'def': I.def_,
    'gdef': I.g_def,
    'edef': I.e_def,
    'xdef': I.x_def,
    # If's.
    'ifnum': I.if_num,
    'ifdim': I.if_dimen,
    'ifodd': I.if_odd,
    'ifvmode': I.if_v_mode,
    'ifhmode': I.if_h_mode,
    'ifmmode': I.if_m_mode,
    'ifinner': I.if_inner,
    'if': I.if_char,
    'ifcat': I.if_cat,
    'ifx': I.if_token,
    'ifvoid': I.if_void,
    'ifhbox': I.if_h_box,
    'ifvbox': I.if_v_box,
    'ifeof': I.if_end_of_file,
    'iftrue': I.if_true,
    'iffalse': I.if_false,
    'ifcase': I.if_case,
    # Banisher-handled.
    'string': I.string,
    'csname': I.cs_name,
    'endcsname': I.end_cs_name,
    'expandafter': I.expand_after,
    'uppercase': I.upper_case,
    'lowercase': I.lower_case,
    'cr': I.cr,
    'else': I.else_,
    'fi': I.end_if,
    'or': I.or_,
    # Other.
    'accent': I.accent,
}

P = Parameters
param_control_sequences = {
    'pretolerance': P.pre_tolerance,
    'tolerance': P.tolerance,
    'hbadness': P.h_badness,
    'vbadness': P.v_badness,
    'linepenalty': P.line_penalty,
    'hyphenpenalty': P.hyphen_penalty,
    'exhyphenpenalty': P.ex_hyphen_penalty,
    'binoppenalty': P.bin_op_penalty,
    'relpenalty': P.rel_penalty,
    'clubpenalty': P.club_penalty,
    'widowpenalty': P.widow_penalty,
    'displaywidowpenalty': P.display_widow_penalty,
    'brokenpenalty': P.broken_penalty,
    'predisplaypenalty': P.pre_display_penalty,
    'postdisplaypenalty': P.post_display_penalty,
    'interlinepenalty': P.inter_line_penalty,
    'floatingpenalty': P.floating_penalty,
    'outputpenalty': P.output_penalty,
    'doublehyphendemerits': P.double_hyphen_demerits,
    'finalhyphendemerits': P.final_hyphen_demerits,
    'adjdemerits': P.adj_demerits,
    'looseness': P.looseness,
    'pausing': P.pausing,
    'holdinginserts': P.holding_inserts,
    'tracingonline': P.tracing_on_line,
    'tracingmacros': P.tracing_macros,
    'tracingstats': P.tracing_stats,
    'tracingparagraphs': P.tracing_paragraphs,
    'tracingpages': P.tracing_pages,
    'tracingoutput': P.tracing_output,
    'tracinglostchars': P.tracing_lostchars,
    'tracingcommands': P.tracing_commands,
    'tracingrestores': P.tracing_restores,
    'language': P.language,
    'uchyph': P.uc_hyph,
    'lefthyphenmin': P.left_hyphen_min,
    'righthyphenmin': P.right_hyphen_min,
    'globaldefs': P.global_defs,
    'maxdeadcycles': P.max_dead_cycles,
    'hangafter': P.hang_after,
    'fam': P.fam,
    'mag': P.mag,
    'escapechar': P.escape_char,
    'defaulthyphenchar': P.default_hyphen_char,
    'defaultskewchar': P.default_skew_char,
    'endlinechar': P.end_line_char,
    'newlinechar': P.new_line_char,
    'delimiterfactor': P.delimiter_factor,
    # THESE TIME ONES WILL BE SET IN P
    'time': P.time,
    'day': P.day,
    'month': P.month,
    'year': P.year,
    'showboxbreadth': P.show_box_breadth,
    'showboxdepth': P.show_box_depth,
    'errorcontextlines': P.error_context_lines,

    'hfuzz': P.h_fuzz,
    'vfuzz': P.v_fuzz,
    'overfullrule': P.over_full_rule,
    'hsize': P.h_size,
    'vsize': P.v_size,
    'maxdepth': P.max_depth,
    'splitmaxdepth': P.split_max_depth,
    'boxmaxdepth': P.box_max_depth,
    'lineskiplimit': P.line_skip_limit,
    'delimitershortfall': P.delimiter_short_fall,
    'nulldelimiterspace': P.null_delimiter_space,
    'scriptspace': P.script_space,
    'mathsurround': P.math_surround,
    'predisplaysize': P.pre_display_size,
    'displaywidth': P.display_width,
    'displayindent': P.display_indent,
    'parindent': P.par_indent,
    'hangindent': P.hang_indent,
    'hoffset': P.h_offset,
    'voffset': P.v_offset,

    'baselineskip': P.base_line_skip,
    'lineskip': P.line_skip,
    'parskip': P.par_skip,
    'abovedisplayskip': P.above_display_skip,
    'abovedisplayshortskip': P.above_display_short_skip,
    'belowdisplayskip': P.below_display_skip,
    'belowdisplayshortskip': P.below_display_short_skip,
    'leftskip': P.left_skip,
    'rightskip': P.right_skip,
    'topskip': P.top_skip,
    'splittopskip': P.split_top_skip,
    'tabskip': P.tab_skip,
    'spaceskip': P.space_skip,
    'xspaceskip': P.x_space_skip,
    'parfillskip': P.par_fill_skip,

    'thinmuskip': P.thin_mu_skip,
    'medmuskip': P.med_mu_skip,
    'thickmuskip': P.thick_mu_skip,

    'output': P.output,
    'everypar': P.every_par,
    'everymath': P.every_math,
    'everydisplay': P.every_display,
    'everyhbox': P.every_h_box,
    'everyvbox': P.every_v_box,
    'everyjob': P.every_job,
    'everycr': P.every_cr,
    'errhelp': P.err_help,
}

special_control_sequences = {
    'spacefactor': Specials.space_factor,
    'prevgraf': Specials.prev_graf,
    'deadcycles': Specials.dead_cycles,
    'insertpenalties': Specials.insert_penalties,
    'prevdepth': Specials.prev_depth,
    'pagegoal': Specials.page_goal,
    'pagetotal': Specials.page_total,
    'pagestretch': Specials.page_stretch,
    'pagefilstretch': Specials.page_fil_stretch,
    'pagefillstretch': Specials.page_fill_stretch,
    'pagefilllstretch': Specials.page_filll_stretch,
    'pageshrink': Specials.page_shrink,
    'pagedepth': Specials.page_depth,
}
